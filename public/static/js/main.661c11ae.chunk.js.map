{"version":3,"sources":["config.js","components/Navbar/Navbar.js","firebase.js","components/UploadForm/UploadForm.js","components/Home.jsx","components/Details.jsx","components/AllCrops.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","Navbar","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","class","to","href","data-target","id","React","Component","Firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UploadForm","props","useState","file","latitude","longitude","navigatorMsg","state","setState","sendURL","a","async","console","log","alert","axios","post","config","path","res","history","push","pathname","data","getPosition","position","coords","imageName","Math","random","onSubmit","e","preventDefault","x","storage","ref","child","put","on","snapshot","err","getDownloadURL","then","catch","error","type","accept","capture","name","onChange","target","files","onClick","navigator","geolocation","getCurrentPosition","Home","className","Details","location","crop","src","alt","text","AllCrops","useEffect","get","success","yy","Object","keys","map","item","crops","App","exact","component","Boolean","window","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.661c11ae.chunk.js","sourcesContent":["let config = {\n\turl: 'https://farmfrenzy.herokuapp.com'\n}\n\nmodule.exports = config;","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport M from 'materialize-css';\n\nclass Navbar extends React.Component {\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\tlet elems = document.querySelectorAll('.sidenav');\n\t\t\tM.Sidenav.init(elems, {});\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\n \t\t\t<nav>\n \t\t\t\t<div class=\"nav-wrapper\">\n \t\t\t\t<Link to='/' class=\"brand-logo\">Crop Processor</Link>\n \t\t\t\t<a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n \t\t\t\t<ul class=\"right hide-on-med-and-down\">\n\t\t\t\t\t<li><Link to=\"/\">Home</Link></li>\n \t\t\t\t\t<li><Link to=\"/upload\">Process</Link></li>\n \t\t\t\t\t<li><Link to=\"/crops\">Crops</Link></li>\n\t\t\t\t\t\n \t\t\t\t</ul>\n \t\t\t\t</div>\n \t\t\t</nav>\n\n \t\t\t<ul class=\"sidenav\" id=\"mobile-demo\">\n \t\t\t\t<li><Link to=\"/\">Home</Link></li>\n \t\t\t\t<li><Link to=\"/upload\">Process</Link></li>\n \t\t\t\t<li><Link to=\"/crops\">Crops</Link></li>\n \t\t\t</ul>\n\n \t\t</div>\n\t\t);\n\t}\n}\n\n\n// const Navbar = () => {\n\n\n// \treturn (\n// \t\t<div>\n\t\t\t\n// \t\t\t<nav>\n// \t\t\t\t<div class=\"nav-wrapper\">\n// \t\t\t\t<a href=\"#!\" class=\"brand-logo\">Crop Processor</a>\n// \t\t\t\t<a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n// \t\t\t\t<ul class=\"right hide-on-med-and-down\">\n// \t\t\t\t\t<li><Link to=\"/\">Home</Link></li>\n// \t\t\t\t\t<li><Link to=\"/upload\">Process</Link></li>\n// \t\t\t\t\t<li><Link to=\"/crops\">Crops</Link></li>\n\t\t\t\t\t\n// \t\t\t\t</ul>\n// \t\t\t\t</div>\n// \t\t\t</nav>\n\n// \t\t\t<ul class=\"sidenav\" id=\"mobile-demo\">\n// \t\t\t\t<li><Link to=\"/\">Home</Link></li>\n// \t\t\t\t<li><Link to=\"/upload\">Process</Link></li>\n// \t\t\t\t<li><Link to=\"/crops\">Crops</Link></li>\n// \t\t\t</ul>\n\n// \t\t</div>\n// \t)\n// }\n\nexport default Navbar;\n","const firebase = require('firebase')\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCiI79efC9vS7csAbi6F5Z5CwXDxN0w3a8\",\n    authDomain: \"hackathon-192011.firebaseapp.com\",\n    databaseURL: \"https://hackathon-192011.firebaseio.com\",\n    projectId: \"hackathon-192011\",\n    storageBucket: \"hackathon-192011.appspot.com\",\n    messagingSenderId: \"146195363368\",\n    appId: \"1:146195363368:web:c60059899a907153c1271d\"\n  };\n  // Initialize Firebase\n  const Firebase = firebase.initializeApp(firebaseConfig);\n\n\n  export default Firebase;","import React, { useState, useEffect } from 'react'\n// import axios from 'axios';\nimport Firebase from '../../firebase';\nimport axios from 'axios';\nimport config from '../../config';\n\nconst UploadForm = (props) => {\n\n\tconst [state, setState] = useState({\n\t\tfile: null,\n\t\tlatitude: null,\n\t\tlongitude: null,\n\t\tnavigatorMsg: 'Get Location'\n\t});\n\n\n\tconst handleChange = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tfile: e.target.files[0]\n\t\t})\n\t}\n\n\tconst sendURL = async (url) => {\n\n\t\tconsole.log('urlllll ', typeof(url));\n\n\t\t// const body = {\n\t\t// \tpath: url,\n\t\t// };\n\n\t\t// let reqOptions = {};\n\t\t// reqOptions.method = 'POST';\n\t\t// reqOptions.body = JSON.stringify(body);\n\n\t\t// fetch('http://localhost:9000/api/process', reqOptions)\n\t\t// .then((result) => {\n\t\t// \talert('done');\n\t\t// \tconsole.log(result);\n\t\t// })\n\t\t// .catch((err) => {\n\t\t// \tconsole.log(err);\n\t\t// })\n\n\n\t\t// axios.post('http://localhost:9000/api/process', body)\n\t\t// .then((result) => {\n\t\t// \tconsole.log(result);\n\t\t// })\n\t\t// .catch((err) => {\n\t\t// \tconsole.log(err);\n\t\t// })\n\n\t\ttry {\n\n\t\t\tif(!(state.latitude) || !(state.longitude) || !(state.file)) {\n\n\t\t\t\talert('enter all fields');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst res = await axios.post(`${config.url}/api/process`, {\n\t\t\t\tpath: url,\n\t\t\t\tlatitude: state.latitude,\n\t\t\t\tlongitude: state.longitude\n\t\t\t});\n\n\t\t\tconsole.log(res)\n\n\t\t\tprops.history.push({\n\t\t\t\tpathname:'/details',\n\t\t\t\tstate: {\n\t\t\t\t\turl,\n\t\t\t\t\tdata: res.data\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\tconst getPosition = (position) => {\n\n\n\t\tconsole.log('position', position);\n\n\t\tif(position) {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tlatitude: position.coords.latitude,\n\t\t\t\tlongitude: position.coords.longitude\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconsole.log(state);\n\t\t\t});\n\t\t\n\t\t}\n\t}\n\n\tconst getLocation = async (e) => {\n\n\t\te.preventDefault();\n\n\t\ttry {\n\n\t\t\tif(navigator.geolocation) {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(getPosition);\n\t\t\t} else {\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tnavigatorMsg: 'Geolocation not supported'\n\t\t\t\t});\n\t\t\t}\t\t\t\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\n\tconst imageName = Math.random();\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconsole.log(state.file)\n\t\t\tlet x = Firebase.storage().ref().child(`images/${imageName}.jpg`).put(state.file)\n\t\t\n\t\t\tx.on('state_changed', (snapshot) => {}, (err) => {}, () => {\n\n\t\t\t\tx.snapshot.ref.getDownloadURL()\n\t\t\t\t.then((url) => {\n\t\t\t\t\tconsole.log('url', url);\n\n\t\t\t\t\tsendURL(url);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t})\n\t\t\t})\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\n\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<div class=\"row\">\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t<div class=\"col s12 m12\">\n\t\t\t\t\t<div class=\"card white darken-1\">\n\t\t\t\t\t\t<div class=\"card-content black-text\">\n\t\t\t\t\t\t\t<span class=\"card-title\">Upload Image</span>\n\t\t\t\t\t\t\t<p>Take photo or upload</p>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<div class=\"file-field input-field\">\n\t\t\t\t\t\t\t\t<div class=\"btn\">\n\t\t\t\t\t\t\t\t\t<span>Photo</span>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"file\" \n\t\t\t\t\t\t\t\t\t\taccept='image/jpeg' \n\t\t\t\t\t\t\t\t\t\tcapture='environment' \n\t\t\t\t\t\t\t\t\t\tname=\"cropImage\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"file-path-wrapper\">\n\t\t\t\t\t\t\t\t\t<input class=\"file-path validate\" type=\"text\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tonClick={getLocation}\n\t\t\t\t\t\t\t\t\tclass=\"btn waves-effect waves-light\" \n\t\t\t\t\t\t\t\t\ttype=\"submit\" name=\"action\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t(state.latitude && state.longitude) ? \n\t\t\t\t\t\t\t\t\t\t\t(state.longitude + ' ' + state.latitude) :\n\t\t\t\t\t\t\t\t\t\t\t(state.navigatorMsg)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<i class=\"material-icons right\">location_searching</i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tclass=\"btn waves-effect waves-light\" \n\t\t\t\t\t\t\t\t\ttype=\"submit\" name=\"action\">Submit\n\t\t\t\t\t\t\t\t\t<i class=\"material-icons right\">send</i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</form>\t\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default UploadForm;\n\n\n\n","import React from 'react'\n\nconst Home = () => {\n\treturn (\n\t\t<div><br/>\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t<div class=\"col s12 m12 center\">\n\t\t\t\t\t<div class=\"card white darken-1\">\n\t\t\t\t\t\t<div class=\"card-content black-text\">\n\t\t\t\t\t\t<h1 className=\"c\">Crop Processor</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Home\n","import React from 'react'\n\nconst Details = (props) => {\n\tconsole.log(props);\n\t\n\tconst {state} = props.location\n\t\n\tconsole.log(state);\n\t\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<div class=\"row\">\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t<div class=\"col s12 m12 center\">\n\t\t\t\t\t<div class=\"card white darken-1\">\n\t\t\t\t\t\t<div class=\"card-content black-text\">\n\t\t\t\t\t\t\t{/* <center><span class=\"card-title\">Details</span> */}\n\t\t\t\t\t\t\t{/* </center> */}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h3>{state.data.crop.name}</h3>\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<img className=\"responsive-img\" src={state.url} alt=\"crop img\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t<p>{state.data.crop.text}</p>\t */}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Details\n","import React from 'react'\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport config from '../config';\nimport { string } from 'prop-types';\n\nconst AllCrops = () => {\n\n\tconst [state, setState] = useState({});\n\n\n\n\tuseEffect(() => {\n\n\t\tconst url = `${config.url}/api/crops`\n\t\taxios.get(url)\n\t\t.then((data) => {\n\n\t\t\tif(data.data.success === true) {\n\t\t\t\t\n\t\t\t\tlet keys = Object.keys(data.data.data);\n\t\t\t\tlet yy = keys.map((item) => {\n\t\t\t\t\treturn data.data.data[item];\t\t\t\t\t\n\t\t\t\t})\n\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tcrops: yy\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\n\t}, []) \n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t(state.crops) ? (\n\n\t\t\t\t\tstate.crops.map((item) => {\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<br /> <br />\n\t\t\t\t\t\t\t\t<strong>{item.name}</strong>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p>{item.text}</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\n\t\t\t\t) : 'Loading'\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default AllCrops\n","import React from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport UploadForm from './components/UploadForm/UploadForm';\n\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport Home from './components/Home';\nimport Details from './components/Details';\nimport AllCrops from './components/AllCrops';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t<div>\n\t\t\t<Navbar />\n\n\t\t\t<Switch>\n\t\t\t<div className='container'>\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route exact path=\"/upload\" component={UploadForm} />\n\t\t\t<Route exact path=\"/details\" component={Details} />\n\t\t\t<Route exact path=\"/crops\" component={AllCrops} />\n\t\t\t</div>\n\t\t\t\n\t\t\t</Switch>\n\n\t\t</div>\n\t\t</BrowserRouter>\n\t\t);\n\t}\n\t\n\texport default App;\n\t","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}